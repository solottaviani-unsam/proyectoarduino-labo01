#include <Wire.h> 
#include <LiquidCrystal_I2C.h>

//Crear el objeto lcd  direcci√≥n  0x3F y 16 columnas x 2 filas
LiquidCrystal_I2C lcd(0x27,16,2);  //





int estadoBoton1Anterior =LOW;
int entradas[] = {2,3};
int posicionBoton = 4;
int contadorBoton1 = 0;
int estadoBotonAnterior = LOW; 
unsigned long  millisBoton = 0;
int modo = 0;
int pisicionMedidorLuz = A0;
int medidorMic = A1;

int micD = 5;


void setup()
{
  Serial.begin(9600);
  pinMode(LED_BUILTIN, OUTPUT);
  for (int i = 0; i < sizeof(entradas); i++ ){
  	pinMode(entradas[i], OUTPUT);
  }
  pinMode(posicionBoton, INPUT);
  pinMode(pisicionMedidorLuz,INPUT);
  pinMode(medidorMic,INPUT);
   pinMode(micD,INPUT);
  
 // Inicializar el LCD
  lcd.init();
  lcd.clear();
  //Encender la luz de fondo.
  lcd.backlight();
  
  
   

  
  
}

unsigned long tiempoAnteriorDisplay = 0;
const unsigned long intervaloDisplay = 500; // actualizar cada 500 ms

void loop()
{
  unsigned long ahora = millis(); 
  int boton = digitalRead(posicionBoton);

  if ((boton == HIGH) && (estadoBotonAnterior == LOW) && (ahora - millisBoton > 300)) {
    millisBoton = ahora;
    modo = !modo;
  }
  estadoBotonAnterior = boton;

  int cantidadSonido = 0;
  int medidorLuz = 0;

  if (modo == 1) {
    digitalWrite(entradas[0], HIGH);  
    digitalWrite(entradas[1], LOW);
    
    // Actualizar el valor cada cierto tiempo
    if (ahora - tiempoAnteriorDisplay > intervaloDisplay) {
      tiempoAnteriorDisplay = ahora;

      medidorLuz = analogRead(pisicionMedidorLuz);
      lcd.clear();
      lcd.setCursor(0, 0);
      lcd.print("Luz: ");
      lcd.print(medidorLuz);
      // mostramos un mensaje segun la cantidad de luz -> eliminar si el mensaje no se muestra correctamente
       if (medidorLuz < 200) {
        lcd.setCursor(0, 1);
      	lcd.print("Luz tenue");
        lcd.clear();
      } else if (medidorLuz >= 200 && medidorLuz < 400) {
        lcd.setCursor(0,1);
        lcd.print("Luz media");
        lcd.clear();
      } else {
        lcd.setCursor(0,1);
        lcd.print("Luz fuerte"); 
        lcd.clear();
      }
    }

  } else {
    digitalWrite(entradas[1], HIGH);  
    digitalWrite(entradas[0], LOW);

    bool soundDetected = digitalRead(micD);
    
    if (ahora - tiempoAnteriorDisplay > intervaloDisplay) {
      tiempoAnteriorDisplay = ahora;

      lcd.clear();
      lcd.setCursor(0, 0);
      if (soundDetected) {
        lcd.print("Ruido detectado");
      } else {
        lcd.print("No hay ruido");
      }
    }
  }
}
